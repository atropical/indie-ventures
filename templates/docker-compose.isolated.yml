  # Isolated services for project: {{PROJECT_NAME}}
  # Database name: {{PROJECT_DB_NAME}}
  indie-{{PROJECT_NAME}}-kong:
    image: kong:2.8.1
    container_name: indie-{{PROJECT_NAME}}-kong
    restart: unless-stopped
    ports:
      - "{{PORTS_OFFSET}}00:8000/tcp"
      - "{{PORTS_OFFSET}}43:8443/tcp"
    volumes:
      - ./volumes/supabase/api/kong.yml:/home/kong/temp.yml:ro,z
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth,request-termination,ip-restriction
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: ${{{PROJECT_NAME_UPPER}}_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${{{PROJECT_NAME_UPPER}}_SERVICE_ROLE_KEY}
      DASHBOARD_USERNAME: ${DASHBOARD_USERNAME}
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD}
    entrypoint: bash -c 'eval "echo \"$$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - indie-network

  indie-{{PROJECT_NAME}}-gotrue:
    image: supabase/gotrue:v2.180.0
    container_name: indie-{{PROJECT_NAME}}-gotrue
    restart: unless-stopped
    healthcheck:
      test:
        - "CMD"
        - "wget"
        - "--no-verbose"
        - "--tries=1"
        - "--spider"
        - "http://localhost:9999/health"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/{{PROJECT_DB_NAME}}
      GOTRUE_SITE_URL: ${SITE_URL}
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP}
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: ${JWT_EXPIRY}
      GOTRUE_JWT_SECRET: ${{{PROJECT_NAME_UPPER}}_JWT_SECRET}
      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP}
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: ${ENABLE_ANONYMOUS_USERS}
      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM}
      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}
      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}
      GOTRUE_EXTERNAL_PHONE_ENABLED: ${ENABLE_PHONE_SIGNUP}
      GOTRUE_SMS_AUTOCONFIRM: ${ENABLE_PHONE_AUTOCONFIRM}
    networks:
      - indie-network

  indie-{{PROJECT_NAME}}-postgrest:
    image: postgrest/postgrest:v13.0.7
    container_name: indie-{{PROJECT_NAME}}-postgrest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/{{PROJECT_DB_NAME}}
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${{{PROJECT_NAME_UPPER}}_JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${{{PROJECT_NAME_UPPER}}_JWT_SECRET}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY}
    command:
      - "postgrest"
    networks:
      - indie-network

  indie-{{PROJECT_NAME}}-realtime:
    image: supabase/realtime:v2.57.2
    container_name: indie-{{PROJECT_NAME}}-realtime
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "-sSfL"
        - "--head"
        - "-o"
        - "/dev/null"
        - "-H"
        - "Authorization: Bearer ${{{PROJECT_NAME_UPPER}}_ANON_KEY}"
        - "http://localhost:4000/api/tenants/{{PROJECT_NAME}}/health"
      timeout: 5s
      interval: 5s
      retries: 3
    environment:
      PORT: 4000
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: supabase_admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: {{PROJECT_DB_NAME}}
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: ${DB_ENC_KEY:-supabaserealtime}
      API_JWT_SECRET: ${{{PROJECT_NAME_UPPER}}_JWT_SECRET}
      SECRET_KEY_BASE: ${{{PROJECT_NAME_UPPER}}_SECRET_KEY_BASE}
      ERL_AFLAGS: -proto_dist inet_tcp
      DNS_NODES: "''"
      RLIMIT_NOFILE: "10000"
      APP_NAME: {{PROJECT_NAME}}
      SEED_SELF_HOST: true
      RUN_JANITOR: true
    networks:
      - indie-network

  indie-{{PROJECT_NAME}}-storage:
    image: supabase/storage-api:v1.28.2
    container_name: indie-{{PROJECT_NAME}}-storage
    restart: unless-stopped
    volumes:
      - ./volumes/{{PROJECT_NAME}}/storage:/var/lib/storage:z
    healthcheck:
      test:
        - "CMD"
        - "wget"
        - "--no-verbose"
        - "--tries=1"
        - "--spider"
        - "http://storage:5000/status"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
      indie-{{PROJECT_NAME}}-postgrest:
        condition: service_started
      indie-{{PROJECT_NAME}}-imgproxy:
        condition: service_started
    environment:
      ANON_KEY: ${{{PROJECT_NAME_UPPER}}_ANON_KEY}
      SERVICE_KEY: ${{{PROJECT_NAME_UPPER}}_SERVICE_ROLE_KEY}
      POSTGREST_URL: http://indie-{{PROJECT_NAME}}-postgrest:3000
      PGRST_JWT_SECRET: ${{{PROJECT_NAME_UPPER}}_JWT_SECRET}
      DATABASE_URL: postgres://supabase_storage_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/{{PROJECT_DB_NAME}}
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://indie-{{PROJECT_NAME}}-imgproxy:5001
    networks:
      - indie-network

  indie-{{PROJECT_NAME}}-imgproxy:
    image: darthsim/imgproxy:v3.8.0
    container_name: indie-{{PROJECT_NAME}}-imgproxy
    restart: unless-stopped
    volumes:
      - ./volumes/{{PROJECT_NAME}}/storage:/var/lib/storage:z
    healthcheck:
      test:
        - "CMD"
        - "imgproxy"
        - "health"
      timeout: 5s
      interval: 5s
      retries: 3
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: ${IMGPROXY_ENABLE_WEBP_DETECTION}
    networks:
      - indie-network
